Terminals unused in grammar

   '.'


Grammaire

    0 $accept: file $end

    1 file: Class

    2 Class: CLASS IDENTIFIER '{' fields '}'

    3 field: Global
    4      | function

    5 fields: /* vide */
    6       | fields field

    7 Global: Data_Type IDENTIFIER ';'
    8       | Data_Type IDENTIFIER '=' expression ';'

    9 variables: /* vide */
   10          | variable
   11          | variables ',' variable

   12 variable: Data_Type IDENTIFIER
   13         | Data_Type IDENTIFIER '=' expression

   14 $@1: /* vide */

   15 function: Data_Type IDENTIFIER $@1 '(' Params ')' '{' statements '}'

   16 $@2: /* vide */

   17 function: VOID IDENTIFIER $@2 '(' Params ')' '{' statements '}'

   18 statements: /* vide */
   19           | statements statement

   20 statement: RETURN expression ';'
   21          | IDENTIFIER '=' expression ';'
   22          | variables ';'
   23          | IDENTIFIER '[' expression ']' '=' expression ';'
   24          | IF expression statement
   25          | IF expression statement ELSE statement
   26          | WHILE '(' expression ')' statement
   27          | FOR '(' variable ';' expr_empty ';' expr_empty ')' statement
   28          | IDENTIFIER '(' expression_Or_No ')' ';'
   29          | '{' statements '}'
   30          | IDENTIFIER INCREMENT
   31          | IDENTIFIER DECREMENT

   32 expression: IDENTIFIER
   33           | INTEGER
   34           | DOUBLENUM
   35           | TRUE
   36           | FALSE
   37           | IDENTIFIER '[' expression ']'
   38           | NEW primitive_type '[' INTEGER ']'
   39           | expression '+' expression
   40           | expression '-' expression
   41           | expression '*' expression
   42           | expression '/' expression
   43           | '-' expression
   44           | expression '<' expression
   45           | expression '>' expression
   46           | expression EQ expression
   47           | expression NEQ expression
   48           | expression LOQ expression
   49           | expression MOQ expression
   50           | IDENTIFIER INCREMENT
   51           | IDENTIFIER DECREMENT
   52           | expression AND expression
   53           | expression OR expression
   54           | NOT expression
   55           | IDENTIFIER '(' expression_Or_No ')'

   56 expr_empty: /* vide */
   57           | expression

   58 expression_Or_No: /* vide */
   59                 | expression
   60                 | expression_Or_No ',' expression

   61 Param: Data_Type IDENTIFIER

   62 Params: /* vide */
   63       | Param
   64       | Params ',' Param

   65 Data_Type: primitive_type
   66          | Array_type

   67 primitive_type: INT
   68               | DOUBLE
   69               | BOOL

   70 Array_type: INT '[' ']'
   71           | DOUBLE '[' ']'
   72           | BOOL '[' ']'


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 15 17 26 27 28 55
')' (41) 15 17 26 27 28 55
'*' (42) 41
'+' (43) 39
',' (44) 11 60 64
'-' (45) 40 43
'.' (46)
'/' (47) 42
';' (59) 7 8 20 21 22 23 27 28
'<' (60) 44
'=' (61) 8 13 21 23
'>' (62) 45
'[' (91) 23 37 38 70 71 72
']' (93) 23 37 38 70 71 72
'{' (123) 2 15 17 29
'}' (125) 2 15 17 29
error (256)
INT (258) 67 70
IDENTIFIER (259) 2 7 8 12 13 15 17 21 23 28 30 31 32 37 50 51 55 61
RETURN (260) 20
INTEGER (261) 33 38
DOUBLENUM (262) 34
CLASS (263) 2
FOR (264) 27
NEW (265) 38
IF (266) 24 25
WHILE (267) 26
DOUBLE (268) 68 71
BOOL (269) 69 72
VOID (270) 17
TRUE (271) 35
FALSE (272) 36
IFPREC (273)
ELSE (274) 25
OR (275) 53
AND (276) 52
NEQ (277) 47
EQ (278) 46
LOQ (279) 48
MOQ (280) 49
MINUS (281)
INCREMENT (282) 30 50
DECREMENT (283) 31 51
NOT (284) 54


Non-terminaux, suivis des règles où ils apparaissent

$accept (46)
    à gauche: 0
file (47)
    à gauche: 1, à droite: 0
Class (48)
    à gauche: 2, à droite: 1
field (49)
    à gauche: 3 4, à droite: 6
fields (50)
    à gauche: 5 6, à droite: 2 6
Global (51)
    à gauche: 7 8, à droite: 3
variables (52)
    à gauche: 9 10 11, à droite: 11 22
variable (53)
    à gauche: 12 13, à droite: 10 11 27
function (54)
    à gauche: 15 17, à droite: 4
$@1 (55)
    à gauche: 14, à droite: 15
$@2 (56)
    à gauche: 16, à droite: 17
statements (57)
    à gauche: 18 19, à droite: 15 17 19 29
statement (58)
    à gauche: 20 21 22 23 24 25 26 27 28 29 30 31, à droite: 19 24
    25 26 27
expression (59)
    à gauche: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 55, à droite: 8 13 20 21 23 24 25 26 37 39 40 41
    42 43 44 45 46 47 48 49 52 53 54 57 59 60
expr_empty (60)
    à gauche: 56 57, à droite: 27
expression_Or_No (61)
    à gauche: 58 59 60, à droite: 28 55 60
Param (62)
    à gauche: 61, à droite: 63 64
Params (63)
    à gauche: 62 63 64, à droite: 15 17 64
Data_Type (64)
    à gauche: 65 66, à droite: 7 8 12 13 15 61
primitive_type (65)
    à gauche: 67 68 69, à droite: 38 65
Array_type (66)
    à gauche: 70 71 72, à droite: 66


état 0

    0 $accept: . file $end

    CLASS  décalage et aller à l'état 1

    file   aller à l'état 2
    Class  aller à l'état 3


état 1

    2 Class: CLASS . IDENTIFIER '{' fields '}'

    IDENTIFIER  décalage et aller à l'état 4


état 2

    0 $accept: file . $end

    $end  décalage et aller à l'état 5


état 3

    1 file: Class .

    $défaut  réduction par utilisation de la règle 1 (file)


état 4

    2 Class: CLASS IDENTIFIER . '{' fields '}'

    '{'  décalage et aller à l'état 6


état 5

    0 $accept: file $end .

    $défaut  accepter


état 6

    2 Class: CLASS IDENTIFIER '{' . fields '}'

    $défaut  réduction par utilisation de la règle 5 (fields)

    fields  aller à l'état 7


état 7

    2 Class: CLASS IDENTIFIER '{' fields . '}'
    6 fields: fields . field

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10
    VOID    décalage et aller à l'état 11
    '}'     décalage et aller à l'état 12

    field           aller à l'état 13
    Global          aller à l'état 14
    function        aller à l'état 15
    Data_Type       aller à l'état 16
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 8

   67 primitive_type: INT .
   70 Array_type: INT . '[' ']'

    '['  décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 67 (primitive_type)


état 9

   68 primitive_type: DOUBLE .
   71 Array_type: DOUBLE . '[' ']'

    '['  décalage et aller à l'état 20

    $défaut  réduction par utilisation de la règle 68 (primitive_type)


état 10

   69 primitive_type: BOOL .
   72 Array_type: BOOL . '[' ']'

    '['  décalage et aller à l'état 21

    $défaut  réduction par utilisation de la règle 69 (primitive_type)


état 11

   17 function: VOID . IDENTIFIER $@2 '(' Params ')' '{' statements '}'

    IDENTIFIER  décalage et aller à l'état 22


état 12

    2 Class: CLASS IDENTIFIER '{' fields '}' .

    $défaut  réduction par utilisation de la règle 2 (Class)


état 13

    6 fields: fields field .

    $défaut  réduction par utilisation de la règle 6 (fields)


état 14

    3 field: Global .

    $défaut  réduction par utilisation de la règle 3 (field)


état 15

    4 field: function .

    $défaut  réduction par utilisation de la règle 4 (field)


état 16

    7 Global: Data_Type . IDENTIFIER ';'
    8       | Data_Type . IDENTIFIER '=' expression ';'
   15 function: Data_Type . IDENTIFIER $@1 '(' Params ')' '{' statements '}'

    IDENTIFIER  décalage et aller à l'état 23


état 17

   65 Data_Type: primitive_type .

    $défaut  réduction par utilisation de la règle 65 (Data_Type)


état 18

   66 Data_Type: Array_type .

    $défaut  réduction par utilisation de la règle 66 (Data_Type)


état 19

   70 Array_type: INT '[' . ']'

    ']'  décalage et aller à l'état 24


état 20

   71 Array_type: DOUBLE '[' . ']'

    ']'  décalage et aller à l'état 25


état 21

   72 Array_type: BOOL '[' . ']'

    ']'  décalage et aller à l'état 26


état 22

   17 function: VOID IDENTIFIER . $@2 '(' Params ')' '{' statements '}'

    $défaut  réduction par utilisation de la règle 16 ($@2)

    $@2  aller à l'état 27


état 23

    7 Global: Data_Type IDENTIFIER . ';'
    8       | Data_Type IDENTIFIER . '=' expression ';'
   15 function: Data_Type IDENTIFIER . $@1 '(' Params ')' '{' statements '}'

    '='  décalage et aller à l'état 28
    ';'  décalage et aller à l'état 29

    $défaut  réduction par utilisation de la règle 14 ($@1)

    $@1  aller à l'état 30


état 24

   70 Array_type: INT '[' ']' .

    $défaut  réduction par utilisation de la règle 70 (Array_type)


état 25

   71 Array_type: DOUBLE '[' ']' .

    $défaut  réduction par utilisation de la règle 71 (Array_type)


état 26

   72 Array_type: BOOL '[' ']' .

    $défaut  réduction par utilisation de la règle 72 (Array_type)


état 27

   17 function: VOID IDENTIFIER $@2 . '(' Params ')' '{' statements '}'

    '('  décalage et aller à l'état 31


état 28

    8 Global: Data_Type IDENTIFIER '=' . expression ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 40


état 29

    7 Global: Data_Type IDENTIFIER ';' .

    $défaut  réduction par utilisation de la règle 7 (Global)


état 30

   15 function: Data_Type IDENTIFIER $@1 . '(' Params ')' '{' statements '}'

    '('  décalage et aller à l'état 41


état 31

   17 function: VOID IDENTIFIER $@2 '(' . Params ')' '{' statements '}'

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 62 (Params)

    Param           aller à l'état 42
    Params          aller à l'état 43
    Data_Type       aller à l'état 44
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 32

   32 expression: IDENTIFIER .
   37           | IDENTIFIER . '[' expression ']'
   50           | IDENTIFIER . INCREMENT
   51           | IDENTIFIER . DECREMENT
   55           | IDENTIFIER . '(' expression_Or_No ')'

    INCREMENT  décalage et aller à l'état 45
    DECREMENT  décalage et aller à l'état 46
    '('        décalage et aller à l'état 47
    '['        décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 32 (expression)


état 33

   33 expression: INTEGER .

    $défaut  réduction par utilisation de la règle 33 (expression)


état 34

   34 expression: DOUBLENUM .

    $défaut  réduction par utilisation de la règle 34 (expression)


état 35

   38 expression: NEW . primitive_type '[' INTEGER ']'

    INT     décalage et aller à l'état 49
    DOUBLE  décalage et aller à l'état 50
    BOOL    décalage et aller à l'état 51

    primitive_type  aller à l'état 52


état 36

   35 expression: TRUE .

    $défaut  réduction par utilisation de la règle 35 (expression)


état 37

   36 expression: FALSE .

    $défaut  réduction par utilisation de la règle 36 (expression)


état 38

   43 expression: '-' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 53


état 39

   54 expression: NOT . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 54


état 40

    8 Global: Data_Type IDENTIFIER '=' expression . ';'
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ';'  décalage et aller à l'état 67


état 41

   15 function: Data_Type IDENTIFIER $@1 '(' . Params ')' '{' statements '}'

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 62 (Params)

    Param           aller à l'état 42
    Params          aller à l'état 68
    Data_Type       aller à l'état 44
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 42

   63 Params: Param .

    $défaut  réduction par utilisation de la règle 63 (Params)


état 43

   17 function: VOID IDENTIFIER $@2 '(' Params . ')' '{' statements '}'
   64 Params: Params . ',' Param

    ','  décalage et aller à l'état 69
    ')'  décalage et aller à l'état 70


état 44

   61 Param: Data_Type . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 71


état 45

   50 expression: IDENTIFIER INCREMENT .

    $défaut  réduction par utilisation de la règle 50 (expression)


état 46

   51 expression: IDENTIFIER DECREMENT .

    $défaut  réduction par utilisation de la règle 51 (expression)


état 47

   55 expression: IDENTIFIER '(' . expression_Or_No ')'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    $défaut  réduction par utilisation de la règle 58 (expression_Or_No)

    expression        aller à l'état 72
    expression_Or_No  aller à l'état 73


état 48

   37 expression: IDENTIFIER '[' . expression ']'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 74


état 49

   67 primitive_type: INT .

    $défaut  réduction par utilisation de la règle 67 (primitive_type)


état 50

   68 primitive_type: DOUBLE .

    $défaut  réduction par utilisation de la règle 68 (primitive_type)


état 51

   69 primitive_type: BOOL .

    $défaut  réduction par utilisation de la règle 69 (primitive_type)


état 52

   38 expression: NEW primitive_type . '[' INTEGER ']'

    '['  décalage et aller à l'état 75


état 53

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   43           | '-' expression .
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    $défaut  réduction par utilisation de la règle 43 (expression)


état 54

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | NOT expression .

    $défaut  réduction par utilisation de la règle 54 (expression)


état 55

   53 expression: expression OR . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 76


état 56

   52 expression: expression AND . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 77


état 57

   47 expression: expression NEQ . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 78


état 58

   46 expression: expression EQ . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 79


état 59

   45 expression: expression '>' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 80


état 60

   44 expression: expression '<' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 81


état 61

   48 expression: expression LOQ . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 82


état 62

   49 expression: expression MOQ . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 83


état 63

   39 expression: expression '+' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 84


état 64

   40 expression: expression '-' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 85


état 65

   41 expression: expression '*' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 86


état 66

   42 expression: expression '/' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 87


état 67

    8 Global: Data_Type IDENTIFIER '=' expression ';' .

    $défaut  réduction par utilisation de la règle 8 (Global)


état 68

   15 function: Data_Type IDENTIFIER $@1 '(' Params . ')' '{' statements '}'
   64 Params: Params . ',' Param

    ','  décalage et aller à l'état 69
    ')'  décalage et aller à l'état 88


état 69

   64 Params: Params ',' . Param

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10

    Param           aller à l'état 89
    Data_Type       aller à l'état 44
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 70

   17 function: VOID IDENTIFIER $@2 '(' Params ')' . '{' statements '}'

    '{'  décalage et aller à l'état 90


état 71

   61 Param: Data_Type IDENTIFIER .

    $défaut  réduction par utilisation de la règle 61 (Param)


état 72

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   59 expression_Or_No: expression .

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 59 (expression_Or_No)


état 73

   55 expression: IDENTIFIER '(' expression_Or_No . ')'
   60 expression_Or_No: expression_Or_No . ',' expression

    ','  décalage et aller à l'état 91
    ')'  décalage et aller à l'état 92


état 74

   37 expression: IDENTIFIER '[' expression . ']'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ']'  décalage et aller à l'état 93


état 75

   38 expression: NEW primitive_type '[' . INTEGER ']'

    INTEGER  décalage et aller à l'état 94


état 76

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   53           | expression OR expression .

    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 53 (expression)


état 77

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   52           | expression AND expression .
   53           | expression . OR expression

    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 52 (expression)


état 78

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   47           | expression NEQ expression .
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 47 (expression)


état 79

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   46           | expression EQ expression .
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 46 (expression)


état 80

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   45           | expression '>' expression .
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    '>'  erreur (non-associative)
    '<'  erreur (non-associative)
    LOQ  erreur (non-associative)
    MOQ  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 45 (expression)


état 81

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   44           | expression '<' expression .
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    '>'  erreur (non-associative)
    '<'  erreur (non-associative)
    LOQ  erreur (non-associative)
    MOQ  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 44 (expression)


état 82

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   48           | expression LOQ expression .
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    '>'  erreur (non-associative)
    '<'  erreur (non-associative)
    LOQ  erreur (non-associative)
    MOQ  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 48 (expression)


état 83

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   49           | expression MOQ expression .
   52           | expression . AND expression
   53           | expression . OR expression

    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    '>'  erreur (non-associative)
    '<'  erreur (non-associative)
    LOQ  erreur (non-associative)
    MOQ  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 49 (expression)


état 84

   39 expression: expression . '+' expression
   39           | expression '+' expression .
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 39 (expression)


état 85

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   40           | expression '-' expression .
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 40 (expression)


état 86

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   41           | expression '*' expression .
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    $défaut  réduction par utilisation de la règle 41 (expression)


état 87

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   42           | expression '/' expression .
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    $défaut  réduction par utilisation de la règle 42 (expression)


état 88

   15 function: Data_Type IDENTIFIER $@1 '(' Params ')' . '{' statements '}'

    '{'  décalage et aller à l'état 95


état 89

   64 Params: Params ',' Param .

    $défaut  réduction par utilisation de la règle 64 (Params)


état 90

   17 function: VOID IDENTIFIER $@2 '(' Params ')' '{' . statements '}'

    $défaut  réduction par utilisation de la règle 18 (statements)

    statements  aller à l'état 96


état 91

   60 expression_Or_No: expression_Or_No ',' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 97


état 92

   55 expression: IDENTIFIER '(' expression_Or_No ')' .

    $défaut  réduction par utilisation de la règle 55 (expression)


état 93

   37 expression: IDENTIFIER '[' expression ']' .

    $défaut  réduction par utilisation de la règle 37 (expression)


état 94

   38 expression: NEW primitive_type '[' INTEGER . ']'

    ']'  décalage et aller à l'état 98


état 95

   15 function: Data_Type IDENTIFIER $@1 '(' Params ')' '{' . statements '}'

    $défaut  réduction par utilisation de la règle 18 (statements)

    statements  aller à l'état 99


état 96

   17 function: VOID IDENTIFIER $@2 '(' Params ')' '{' statements . '}'
   19 statements: statements . statement

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105
    '}'         décalage et aller à l'état 106

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 109
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 97

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   60 expression_Or_No: expression_Or_No ',' expression .

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 60 (expression_Or_No)


état 98

   38 expression: NEW primitive_type '[' INTEGER ']' .

    $défaut  réduction par utilisation de la règle 38 (expression)


état 99

   15 function: Data_Type IDENTIFIER $@1 '(' Params ')' '{' statements . '}'
   19 statements: statements . statement

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105
    '}'         décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 109
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 100

   21 statement: IDENTIFIER . '=' expression ';'
   23          | IDENTIFIER . '[' expression ']' '=' expression ';'
   28          | IDENTIFIER . '(' expression_Or_No ')' ';'
   30          | IDENTIFIER . INCREMENT
   31          | IDENTIFIER . DECREMENT

    '='        décalage et aller à l'état 112
    INCREMENT  décalage et aller à l'état 113
    DECREMENT  décalage et aller à l'état 114
    '('        décalage et aller à l'état 115
    '['        décalage et aller à l'état 116


état 101

   20 statement: RETURN . expression ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 117


état 102

   27 statement: FOR . '(' variable ';' expr_empty ';' expr_empty ')' statement

    '('  décalage et aller à l'état 118


état 103

   24 statement: IF . expression statement
   25          | IF . expression statement ELSE statement

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 119


état 104

   26 statement: WHILE . '(' expression ')' statement

    '('  décalage et aller à l'état 120


état 105

   29 statement: '{' . statements '}'

    $défaut  réduction par utilisation de la règle 18 (statements)

    statements  aller à l'état 121


état 106

   17 function: VOID IDENTIFIER $@2 '(' Params ')' '{' statements '}' .

    $défaut  réduction par utilisation de la règle 17 (function)


état 107

   11 variables: variables . ',' variable
   22 statement: variables . ';'

    ';'  décalage et aller à l'état 122
    ','  décalage et aller à l'état 123


état 108

   10 variables: variable .

    $défaut  réduction par utilisation de la règle 10 (variables)


état 109

   19 statements: statements statement .

    $défaut  réduction par utilisation de la règle 19 (statements)


état 110

   12 variable: Data_Type . IDENTIFIER
   13         | Data_Type . IDENTIFIER '=' expression

    IDENTIFIER  décalage et aller à l'état 124


état 111

   15 function: Data_Type IDENTIFIER $@1 '(' Params ')' '{' statements '}' .

    $défaut  réduction par utilisation de la règle 15 (function)


état 112

   21 statement: IDENTIFIER '=' . expression ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 125


état 113

   30 statement: IDENTIFIER INCREMENT .

    $défaut  réduction par utilisation de la règle 30 (statement)


état 114

   31 statement: IDENTIFIER DECREMENT .

    $défaut  réduction par utilisation de la règle 31 (statement)


état 115

   28 statement: IDENTIFIER '(' . expression_Or_No ')' ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    $défaut  réduction par utilisation de la règle 58 (expression_Or_No)

    expression        aller à l'état 72
    expression_Or_No  aller à l'état 126


état 116

   23 statement: IDENTIFIER '[' . expression ']' '=' expression ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 127


état 117

   20 statement: RETURN expression . ';'
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ';'  décalage et aller à l'état 128


état 118

   27 statement: FOR '(' . variable ';' expr_empty ';' expr_empty ')' statement

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10

    variable        aller à l'état 129
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 119

   24 statement: IF expression . statement
   25          | IF expression . statement ELSE statement
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    OR          décalage et aller à l'état 55
    AND         décalage et aller à l'état 56
    NEQ         décalage et aller à l'état 57
    EQ          décalage et aller à l'état 58
    '>'         décalage et aller à l'état 59
    '<'         décalage et aller à l'état 60
    LOQ         décalage et aller à l'état 61
    MOQ         décalage et aller à l'état 62
    '+'         décalage et aller à l'état 63
    '-'         décalage et aller à l'état 64
    '*'         décalage et aller à l'état 65
    '/'         décalage et aller à l'état 66
    '{'         décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 130
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 120

   26 statement: WHILE '(' . expression ')' statement

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 131


état 121

   19 statements: statements . statement
   29 statement: '{' statements . '}'

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105
    '}'         décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 109
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 122

   22 statement: variables ';' .

    $défaut  réduction par utilisation de la règle 22 (statement)


état 123

   11 variables: variables ',' . variable

    INT     décalage et aller à l'état 8
    DOUBLE  décalage et aller à l'état 9
    BOOL    décalage et aller à l'état 10

    variable        aller à l'état 133
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 124

   12 variable: Data_Type IDENTIFIER .
   13         | Data_Type IDENTIFIER . '=' expression

    '='  décalage et aller à l'état 134

    $défaut  réduction par utilisation de la règle 12 (variable)


état 125

   21 statement: IDENTIFIER '=' expression . ';'
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ';'  décalage et aller à l'état 135


état 126

   28 statement: IDENTIFIER '(' expression_Or_No . ')' ';'
   60 expression_Or_No: expression_Or_No . ',' expression

    ','  décalage et aller à l'état 91
    ')'  décalage et aller à l'état 136


état 127

   23 statement: IDENTIFIER '[' expression . ']' '=' expression ';'
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ']'  décalage et aller à l'état 137


état 128

   20 statement: RETURN expression ';' .

    $défaut  réduction par utilisation de la règle 20 (statement)


état 129

   27 statement: FOR '(' variable . ';' expr_empty ';' expr_empty ')' statement

    ';'  décalage et aller à l'état 138


état 130

   24 statement: IF expression statement .
   25          | IF expression statement . ELSE statement

    ELSE  décalage et aller à l'état 139

    $défaut  réduction par utilisation de la règle 24 (statement)


état 131

   26 statement: WHILE '(' expression . ')' statement
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ')'  décalage et aller à l'état 140


état 132

   29 statement: '{' statements '}' .

    $défaut  réduction par utilisation de la règle 29 (statement)


état 133

   11 variables: variables ',' variable .

    $défaut  réduction par utilisation de la règle 11 (variables)


état 134

   13 variable: Data_Type IDENTIFIER '=' . expression

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 141


état 135

   21 statement: IDENTIFIER '=' expression ';' .

    $défaut  réduction par utilisation de la règle 21 (statement)


état 136

   28 statement: IDENTIFIER '(' expression_Or_No ')' . ';'

    ';'  décalage et aller à l'état 142


état 137

   23 statement: IDENTIFIER '[' expression ']' . '=' expression ';'

    '='  décalage et aller à l'état 143


état 138

   27 statement: FOR '(' variable ';' . expr_empty ';' expr_empty ')' statement

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    $défaut  réduction par utilisation de la règle 56 (expr_empty)

    expression  aller à l'état 144
    expr_empty  aller à l'état 145


état 139

   25 statement: IF expression statement ELSE . statement

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 146
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 140

   26 statement: WHILE '(' expression ')' . statement

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 147
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 141

   13 variable: Data_Type IDENTIFIER '=' expression .
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 13 (variable)


état 142

   28 statement: IDENTIFIER '(' expression_Or_No ')' ';' .

    $défaut  réduction par utilisation de la règle 28 (statement)


état 143

   23 statement: IDENTIFIER '[' expression ']' '=' . expression ';'

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    expression  aller à l'état 148


état 144

   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   57 expr_empty: expression .

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 57 (expr_empty)


état 145

   27 statement: FOR '(' variable ';' expr_empty . ';' expr_empty ')' statement

    ';'  décalage et aller à l'état 149


état 146

   25 statement: IF expression statement ELSE statement .

    $défaut  réduction par utilisation de la règle 25 (statement)


état 147

   26 statement: WHILE '(' expression ')' statement .

    $défaut  réduction par utilisation de la règle 26 (statement)


état 148

   23 statement: IDENTIFIER '[' expression ']' '=' expression . ';'
   39 expression: expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . '>' expression
   46           | expression . EQ expression
   47           | expression . NEQ expression
   48           | expression . LOQ expression
   49           | expression . MOQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    OR   décalage et aller à l'état 55
    AND  décalage et aller à l'état 56
    NEQ  décalage et aller à l'état 57
    EQ   décalage et aller à l'état 58
    '>'  décalage et aller à l'état 59
    '<'  décalage et aller à l'état 60
    LOQ  décalage et aller à l'état 61
    MOQ  décalage et aller à l'état 62
    '+'  décalage et aller à l'état 63
    '-'  décalage et aller à l'état 64
    '*'  décalage et aller à l'état 65
    '/'  décalage et aller à l'état 66
    ';'  décalage et aller à l'état 150


état 149

   27 statement: FOR '(' variable ';' expr_empty ';' . expr_empty ')' statement

    IDENTIFIER  décalage et aller à l'état 32
    INTEGER     décalage et aller à l'état 33
    DOUBLENUM   décalage et aller à l'état 34
    NEW         décalage et aller à l'état 35
    TRUE        décalage et aller à l'état 36
    FALSE       décalage et aller à l'état 37
    '-'         décalage et aller à l'état 38
    NOT         décalage et aller à l'état 39

    $défaut  réduction par utilisation de la règle 56 (expr_empty)

    expression  aller à l'état 144
    expr_empty  aller à l'état 151


état 150

   23 statement: IDENTIFIER '[' expression ']' '=' expression ';' .

    $défaut  réduction par utilisation de la règle 23 (statement)


état 151

   27 statement: FOR '(' variable ';' expr_empty ';' expr_empty . ')' statement

    ')'  décalage et aller à l'état 152


état 152

   27 statement: FOR '(' variable ';' expr_empty ';' expr_empty ')' . statement

    INT         décalage et aller à l'état 8
    IDENTIFIER  décalage et aller à l'état 100
    RETURN      décalage et aller à l'état 101
    FOR         décalage et aller à l'état 102
    IF          décalage et aller à l'état 103
    WHILE       décalage et aller à l'état 104
    DOUBLE      décalage et aller à l'état 9
    BOOL        décalage et aller à l'état 10
    '{'         décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 9 (variables)

    variables       aller à l'état 107
    variable        aller à l'état 108
    statement       aller à l'état 153
    Data_Type       aller à l'état 110
    primitive_type  aller à l'état 17
    Array_type      aller à l'état 18


état 153

   27 statement: FOR '(' variable ';' expr_empty ';' expr_empty ')' statement .

    $défaut  réduction par utilisation de la règle 27 (statement)
